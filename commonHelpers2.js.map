{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('button[data-start]');\nstartButton.disabled = true;\nstartButton.addEventListener('click', start);\nlet futureDate = null;\nlet interval = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0].getTime();\n        if (selectedDate < Date.now()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topCenter',\n            });\n            return;\n        }\n        else {\n            startButton.disabled = false;\n            futureDate = selectedDate;\n        }\n    },\n};\n\nflatpickr(document.querySelector('#datetime-picker'), options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction start() {\n    startButton.disabled = true;\n    document.querySelector('#datetime-picker').disabled = true;\n    moveTimer();\n    interval = setInterval(moveTimer, 1000);\n}\n  \nfunction moveTimer() {\n    let { days, hours, minutes, seconds } = convertMs(\n        futureDate - Date.now()\n    );\n  \n    document.querySelector('span[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('span[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('span[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('span[data-seconds]').textContent = addLeadingZero(seconds);\n  \n    if (days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0) {\n        futureDate = null;\n        document.querySelector('#datetime-picker').disabled = false;\n        clearInterval(interval);\n    }\n}\n"],"names":["startButton","start","futureDate","interval","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","moveTimer"],"mappings":"0IAKA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASC,CAAK,EAC3C,IAAIC,EAAa,KACbC,EAAW,KAEf,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAAE,QAAO,EAC7C,GAAIC,EAAe,KAAK,MAAO,CAC3BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,WAC1B,CAAa,EACD,MACH,MAEGP,EAAY,SAAW,GACvBE,EAAaI,CAEpB,CACL,EAEAE,EAAU,SAAS,cAAc,kBAAkB,EAAGJ,CAAO,EAE7D,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASf,GAAQ,CACbD,EAAY,SAAW,GACvB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtDiB,IACAd,EAAW,YAAYc,EAAW,GAAI,CAC1C,CAEA,SAASA,GAAY,CACjB,GAAI,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EACpCP,EAAa,KAAK,IAAK,CAC/B,EAEI,SAAS,cAAc,iBAAiB,EAAE,YAAca,EAAeJ,CAAI,EAC3E,SAAS,cAAc,kBAAkB,EAAE,YAAcI,EAAeH,CAAK,EAC7E,SAAS,cAAc,oBAAoB,EAAE,YAAcG,EAAeF,CAAO,EACjF,SAAS,cAAc,oBAAoB,EAAE,YAAcE,EAAeD,CAAO,EAE7EH,GAAQ,GAAKC,GAAS,GAAKC,GAAW,GAAKC,GAAW,IACtDZ,EAAa,KACb,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,cAAcC,CAAQ,EAE9B"}